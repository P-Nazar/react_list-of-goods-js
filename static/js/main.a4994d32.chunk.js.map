{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","ALPHABETICALLY","LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preperedGoods","sort","good1","good2","localeCompare","length","reverse","getPreperedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,sBACjBC,EAAS,iBAiCR,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAlCR,SACEC,EADF,GAMG,IAHCL,EAGF,EAHEA,UACAE,EAEF,EAFEA,WAGII,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,EACKI,EAAcM,UAGhBN,EAMcO,CACnBlB,EACA,CAAEK,YACAE,eAQJ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcJ,IAJ9B,iCAUA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYjB,IAAcH,IAJ9B,4BAUA,wBACEkB,QAAS,kBAAMZ,GAAeD,IAC9Bc,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAaf,IAJjB,sBASEF,GAAaE,IACb,wBACEa,QAvCW,WACnBd,EAAa,IACbE,GAAc,IAsCNa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4994d32.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst ALPHABETICALLY = 'Sort alphabetically';\nconst LENGTH = 'Sort by length';\n\nfunction getPreperedGoods(\n  goods,\n  {\n    sortField,\n    isReversed,\n  },\n) {\n  const preperedGoods = [...goods];\n\n  if (sortField) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreperedGoods(\n    goodsFromServer,\n    { sortField,\n      isReversed },\n  );\n\n  const handlerReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n        {(sortField || isReversed) && (\n          <button\n            onClick={handlerReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        ) }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}